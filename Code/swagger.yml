openapi: 3.0.3
info:
  title: I'll give you the stone
  description: |-
    
  version: 1.0.1
externalDocs:
  description: Github
  url: https://github.com/Kirill-Bokov/I-ll-give-you-the-stone
servers:
  - url: https://stone.recolter.ru/api
tags:
  - name: item
    description: Everything about items
paths:
  /user/:
    get:
      tags:
        - user
      summary: Try to auth user
      description: Auth user
      operationId: authUser
      parameters:
        - name: email
          in: query
          description: Email of user
          schema:
            type: string
        - name: password
          in: query
          description: Password of user
          schema:
            type: string
        - name: token
          in: query
          description: Token of user (if email and password doent exists)
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: string
        '502':
          description: Bad query
    post:
      tags:
        - user
      summary: Add user
      description: Add user
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                login:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: integer
        '502':
          description: Bad query
  /category/item/:
    post:
      tags:
        - itemCategory
      summary: Add item in category
      description: Add item in category
      operationId: addItemCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: number
                item:
                  type: number
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: integer
        '502':
          description: Bad query
  /item/:
    get:
      tags:
        - item
      summary: Gets some items
      description: Gets items that you need
      operationId: getItems
      parameters:
        - name: asc
          in: query
          description: ASC or DESC (if not defined then DESC)
          schema:
            type: integer
            enum:
              - 1
        - name: filter
          in: query
          description: Gets items by sort
          schema:
            type: string
            default: id
            enum:
              - id
              - cost
              - count
              - name
        - name: count
          in: query
          description: Gets items by count (10-50)
          schema:
            type: integer
            default: 30
        - name: index
          in: query
          description: Count of loaded items
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ItemArray'          
            application/xml:
              schema:
                $ref: '#/components/schemas/ItemArray'
        '502':
          description: Bad query
    post:
      tags:
        - item
      summary: Add item
      description: Add item
      operationId: addItem
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                cost:
                  type: number
                desc:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: integer
        '502':
          description: Bad query
  /provider/:
    post:
      tags:
        - provider
      summary: Add provider
      description: Add provider
      operationId: addProvider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                inn:
                  type: string
                checkAccount:
                  type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: integer
            application/xml:
              schema:
                type: object
                properties:
                  result:
                    type: integer
        '502':
          description: Bad query
components:
  schemas:
    Item:
        type: object
        properties:
            id:
              type: integer
              format: int64
              example: 10
            name:
              type: string
              example: test
            cost:
              type: integer
              example: 1000
            description:
              type: string
              example: test
            count:
              type: integer
              example: 5
        xml:
          name: item
    ItemArray:
      type: array
      items:
        $ref: '#/components/schemas/Item'
      xml:
        name: items